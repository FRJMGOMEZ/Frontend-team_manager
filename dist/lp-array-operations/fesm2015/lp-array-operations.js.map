{"version":3,"file":"lp-array-operations.js","sources":["../../../projects/lp-array-operations/src/lib/lp-array-operations.ts","../../../projects/lp-array-operations/src/public-api.ts","../../../projects/lp-array-operations/src/lp-array-operations.ts"],"sourcesContent":["\nexport class LpArrayOperations {\n  public static divideArray(array: any[], size: number) {\n    const chunked_arr = [];\n    for (let i = 0; i < array.length; i++) {\n      const last = chunked_arr[chunked_arr.length - 1];\n      if (!last || last.length === size) {\n        chunked_arr.push([array[i]]);\n      } else {\n        last.push(array[i]);\n      }\n    }\n    return chunked_arr;\n  }\n  public static update(oldArray, item, method: string) {\n    let updated\n    switch (method) {\n      case 'POST':\n        updated = [...oldArray, item];\n        break;\n      case 'PUT':\n        updated = oldArray.map((eachItem) => { return eachItem._id === item._id ? item : eachItem })\n        break;\n      case 'DELETE':\n        updated = oldArray.filter((eachItem) => { return eachItem._id != item._id })\n        break;\n    }\n    return updated\n  }\n\n  public static hasItem(array, item): boolean {\n    if (array.map((eachItem) => { return eachItem._id }).includes(item._id)) {\n      return true\n    }\n    return false;\n  }\n\n\n  public static monthValue(month: string | number) {\n    let value;\n    if (typeof month === 'string') {\n      switch (month) {\n        case 'january': value = 0;\n          break;\n        case 'february': value = 1;\n          break;\n        case 'march': value = 2;\n          break;\n        case 'april': value = 3;\n          break;\n        case 'may': value = 4;\n          break;\n        case 'june': value = 5;\n          break;\n        case 'july': value = 6;\n          break;\n        case 'august': value = 7;\n          break;\n        case 'september': value = 8;\n          break;\n        case 'october': value = 9;\n          break;\n        case 'november': value = 10;\n          break;\n        case 'december': value = 11;\n          break;\n      }\n    } else {\n      switch (month) {\n        case 0: value = 'january';\n          break;\n        case 1: value = 'february';\n          break;\n        case 2: value = 'march';\n          break;\n        case 3: value = 'april';\n          break;\n        case 4: value = 'may';\n          break;\n        case 5: value = 'june';\n          break;\n        case 6: value = 'july';\n          break;\n        case 7: value = 'august';\n          break;\n        case 8: value = 'september';\n          break;\n        case 9: value = 'october';\n          break;\n        case 10: value = 'october';\n          break;\n        case 11: value = 'december';\n          break;\n      }\n    }\n    return value.toString();\n  }\n}\n","/*\n * Public API Surface of lp-array-operations\n */\n\nexport * from './lib/lp-array-operations';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}