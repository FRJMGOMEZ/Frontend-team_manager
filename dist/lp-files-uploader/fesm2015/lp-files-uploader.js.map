{"version":3,"file":"lp-files-uploader.js","sources":["../../../projects/lp-files-uploader/src/lib/lp-files-uploader.component.ts","../../../projects/lp-files-uploader/src/lib/lp-files-uploader.directive.ts","../../../projects/lp-files-uploader/src/lib/lp-files-uploader.module.ts","../../../projects/lp-files-uploader/src/public-api.ts","../../../projects/lp-files-uploader/src/lp-files-uploader.ts"],"sourcesContent":["import { Component, forwardRef, ElementRef,ViewChild, Input,  AfterViewInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NgModel, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { skip } from 'rxjs/operators';\n\n@Component({\n  selector: 'lp-files-uploader',\n  templateUrl: './lp-files-uploader.component.html',\n  styles:[],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => LpFilesUploaderComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => LpFilesUploaderComponent),\n      multi: true,\n    }\n  ]\n})\nexport class LpFilesUploaderComponent implements  ControlValueAccessor, AfterViewInit, Validator{\n  @Input() trigger:ElementRef\n  @ViewChild('fileInput',{static:true}) fileInput:ElementRef;\n  @ViewChild('fileInputCtrl',{static:true}) fileInputController:NgModel;\n   /* VALIDATION CRITERIA */\n  @Input() config: { [key: string]: any } = {}\n  errors: { [key: string]: any }\n  validate(){\n    return this.errors\n  }\n  ngAfterViewInit(){\n\n  if (this.trigger) {\n    this.trigger.nativeElement.addEventListener('click', () => {\n      this.fileInput.nativeElement.click();\n    })\n } else {\n   throw new Error('Component needs a trigger')\n }\n    this.fileInputController.valueChanges.pipe(skip(1)).subscribe(() => {\n       let errors = this.fileInputController.control.errors;\n        if(errors){\n          this.errors = errors;\n          this.propagateChange(null);\n        }else{\n          this.errors = null;\n          this.propagateChange(this.fileInput.nativeElement.files);\n        }\n        this.fileInput.nativeElement.files = null;\n        this.fileInput.nativeElement.value = null;\n    })\n  }\n\n  private propagateChange = (_: any) => {};\n  public writeValue(obj: any) {}\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  public registerOnTouched() { }\n\n}\n\n\n\n \n\n  \n\n\n\n","import { Directive, Input,  forwardRef, ElementRef } from '@angular/core';\nimport { Validator, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[lpFilesUploader]',\n  providers:[\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => LpFilesUploaderDirective),\n      multi: true,\n    }\n  ]\n})\nexport class LpFilesUploaderDirective implements  Validator  {\n\n  @Input() allowedMimeTypes: string[];\n  @Input() notAllowedMimeTypes: string[];\n  @Input() maxSizeKb: number ;\n  @Input() maxNameLength: number;\n\n  constructor(private el:ElementRef) { }\n\n  validate() {\n    let files:FileList = this.el.nativeElement.files; \n     let error = this.validateTypes(files) ? this.validateTypes(files):this.validateSize(files) ? this.validateSize(files) : this.validateNameLength(files) ? this.validateNameLength(files) : null;\n     return error;\n  }\n\n\n  validateTypes(files:FileList):any{\n    let error= null;\n     Array.from(files).forEach((file:File)=>{\n          if(this.allowedMimeTypes ){\n            if (this.allowedMimeTypes.indexOf(file.type) < 0) {\n              error = { invalidMimeType: true };\n            }  \n          }\n      });\n\n      if(this.notAllowedMimeTypes){\n        Array.from(files).forEach((file: File) => {\n          if (this.notAllowedMimeTypes.indexOf(file.type) >= 0) {\n            error = { invalidMimeType: true };\n          }\n        });\n      }\n     return error;\n  }\n\n\n  validateSize(files:FileList):any{\n    let error= null;\n    if(this.maxSizeKb){\n      Array.from(files).forEach((file: File) => {\n        let sizeInKb = file.size / 1024;\n        if (sizeInKb > this.maxSizeKb) {\n          error = { invalidFileSize: true };\n        }\n      });\n    }\n    return error;     \n  }\n\n  validateNameLength(files: FileList):any{\n      let error = null;\n      if(this.maxNameLength){\n        Array.from(files).forEach((file: File) => {\n          if (file.name.length > this.maxNameLength) {\n            error = { invalidNameLength: true };\n          }\n        });\n      }\n      return error;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LpFilesUploaderComponent } from './lp-files-uploader.component';\nimport { LpFilesUploaderDirective } from './lp-files-uploader.directive';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LpFilesUploaderDirective,\n    LpFilesUploaderComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    LpFilesUploaderDirective,\n    LpFilesUploaderComponent\n  ]\n})\nexport class LpFilesUploaderModule { }\n","/*\n * Public API Surface of lp-files-uploader\n */\n\nexport * from './lib/lp-files-uploader.component';\nexport * from './lib/lp-files-uploader.directive';\nexport* from './lib/lp-files-uploader.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}