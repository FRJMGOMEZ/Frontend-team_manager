{"version":3,"file":"lp-files-uploader.umd.js","sources":["../../../projects/lp-files-uploader/src/lib/lp-files-uploader.component.ts","../../../projects/lp-files-uploader/src/lib/lp-files-uploader.directive.ts","../../../projects/lp-files-uploader/src/lib/lp-files-uploader.module.ts","../../../projects/lp-files-uploader/src/public-api.ts","../../../projects/lp-files-uploader/src/lp-files-uploader.ts"],"sourcesContent":["import { Component, forwardRef, ElementRef,ViewChild, Input,  AfterViewInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NgModel, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { skip } from 'rxjs/operators';\n\n@Component({\n  selector: 'lp-files-uploader',\n  templateUrl: './lp-files-uploader.component.html',\n  styles:[],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => LpFilesUploaderComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => LpFilesUploaderComponent),\n      multi: true,\n    }\n  ]\n})\nexport class LpFilesUploaderComponent implements  ControlValueAccessor, AfterViewInit, Validator{\n  @Input() trigger:ElementRef\n  @ViewChild('fileInput',{static:true}) fileInput:ElementRef;\n  @ViewChild('fileInputCtrl',{static:true}) fileInputController:NgModel;\n   /* VALIDATION CRITERIA */\n  @Input() config: { [key: string]: any } = {}\n  errors: { [key: string]: any }\n  validate(){\n    return this.errors\n  }\n  ngAfterViewInit(){\n\n  if (this.trigger) {\n    this.trigger.nativeElement.addEventListener('click', () => {\n      this.fileInput.nativeElement.click();\n    })\n } else {\n   throw new Error('Component needs a trigger')\n }\n    this.fileInputController.valueChanges.pipe(skip(1)).subscribe(() => {\n       let errors = this.fileInputController.control.errors;\n        if(errors){\n          this.errors = errors;\n          this.propagateChange(null);\n        }else{\n          this.errors = null;\n          this.propagateChange(this.fileInput.nativeElement.files);\n        }\n        this.fileInput.nativeElement.files = null;\n        this.fileInput.nativeElement.value = null;\n    })\n  }\n\n  private propagateChange = (_: any) => {};\n  public writeValue(obj: any) {}\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  public registerOnTouched() { }\n\n}\n\n\n\n \n\n  \n\n\n\n","import { Directive, Input,  forwardRef, ElementRef } from '@angular/core';\nimport { Validator, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[lpFilesUploader]',\n  providers:[\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => LpFilesUploaderDirective),\n      multi: true,\n    }\n  ]\n})\nexport class LpFilesUploaderDirective implements  Validator  {\n\n  @Input() allowedMimeTypes: string[];\n  @Input() notAllowedMimeTypes: string[];\n  @Input() maxSizeKb: number ;\n  @Input() maxNameLength: number;\n\n  constructor(private el:ElementRef) { }\n\n  validate() {\n    let files:FileList = this.el.nativeElement.files; \n     let error = this.validateTypes(files) ? this.validateTypes(files):this.validateSize(files) ? this.validateSize(files) : this.validateNameLength(files) ? this.validateNameLength(files) : null;\n     return error;\n  }\n\n\n  validateTypes(files:FileList):any{\n    let error= null;\n     Array.from(files).forEach((file:File)=>{\n          if(this.allowedMimeTypes ){\n            if (this.allowedMimeTypes.indexOf(file.type) < 0) {\n              error = { invalidMimeType: true };\n            }  \n          }\n      });\n\n      if(this.notAllowedMimeTypes){\n        Array.from(files).forEach((file: File) => {\n          if (this.notAllowedMimeTypes.indexOf(file.type) >= 0) {\n            error = { invalidMimeType: true };\n          }\n        });\n      }\n     return error;\n  }\n\n\n  validateSize(files:FileList):any{\n    let error= null;\n    if(this.maxSizeKb){\n      Array.from(files).forEach((file: File) => {\n        let sizeInKb = file.size / 1024;\n        if (sizeInKb > this.maxSizeKb) {\n          error = { invalidFileSize: true };\n        }\n      });\n    }\n    return error;     \n  }\n\n  validateNameLength(files: FileList):any{\n      let error = null;\n      if(this.maxNameLength){\n        Array.from(files).forEach((file: File) => {\n          if (file.name.length > this.maxNameLength) {\n            error = { invalidNameLength: true };\n          }\n        });\n      }\n      return error;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LpFilesUploaderComponent } from './lp-files-uploader.component';\nimport { LpFilesUploaderDirective } from './lp-files-uploader.directive';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LpFilesUploaderDirective,\n    LpFilesUploaderComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    LpFilesUploaderDirective,\n    LpFilesUploaderComponent\n  ]\n})\nexport class LpFilesUploaderModule { }\n","/*\n * Public API Surface of lp-files-uploader\n */\n\nexport * from './lib/lp-files-uploader.component';\nexport * from './lib/lp-files-uploader.directive';\nexport* from './lib/lp-files-uploader.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["skip","Component","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Input","ViewChild","Directive","ElementRef","NgModule","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":"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"}