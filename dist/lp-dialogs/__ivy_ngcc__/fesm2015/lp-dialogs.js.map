{"version":3,"file":"lp-dialogs.js","sources":["../../../projects/lp-dialogs/src/lib/lp-info-dialog/lp-info-dialog.component.ts","../../../projects/lp-dialogs/src/lib/lp-confirm-dialog/lp-confirm-dialog.component.ts","../../../projects/lp-dialogs/src/lib/lp-dialogs.module.ts","../../../projects/lp-dialogs/src/lib/shared/providers/lp-dialogs.service.ts","../../../projects/lp-dialogs/src/public-api.ts","../../../projects/lp-dialogs/src/lp-dialogs.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-lp-info-dialog',\n  templateUrl: './lp-info-dialog.component.html',\n  styleUrls: ['./lp-info-dialog.component.scss']\n})\nexport class LpInfoDialogComponent implements OnInit {\n\n  message: string\n  item: string\n  title: string\n  constructor(private dialogRef: MatDialogRef<LpInfoDialogComponent>, @Inject(MAT_DIALOG_DATA) private data) { }\n  ngOnInit(): void {\n    this.message = this.data.message;\n    this.title = this.data.title;\n    this.item = this.data.item;\n  }\n  hideModal() {\n    this.dialogRef.close()\n  }\n\n  /// MUST CREATE A BACKEND TO REPORT ERRORS ///\n  reportError() { }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-lp-confirm-dialog',\n  templateUrl: './lp-confirm-dialog.component.html',\n  styleUrls: ['./lp-confirm-dialog.component.scss']\n})\nexport class LpConfirmDialogComponent implements OnInit {\n\n  message: string\n  title: string\n  constructor(private dialogRef: MatDialogRef<LpConfirmDialogComponent >, @Inject(MAT_DIALOG_DATA) private data) { }\n\n  ngOnInit(): void {\n    this.message = this.data.message;\n    this.title = this.data.title;\n  }\n\n  hideModal(accepted: boolean) {\n    this.dialogRef.close(accepted)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { LpConfirmDialogComponent } from './lp-confirm-dialog/lp-confirm-dialog.component';\nimport { LpInfoDialogComponent } from './lp-info-dialog/lp-info-dialog.component';\n\n@NgModule({\n  declarations: [LpConfirmDialogComponent,LpInfoDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule\n  ],\n  providers:[],\n  exports: [LpConfirmDialogComponent, LpInfoDialogComponent]\n})\nexport class LpDialogsModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { LpInfoDialogComponent } from '../../lp-info-dialog/lp-info-dialog.component';\nimport { LpConfirmDialogComponent } from '../../lp-confirm-dialog/lp-confirm-dialog.component';\nimport { LpDialogsModule } from '../../lp-dialogs.module';\n\n@Injectable({\n  providedIn: LpDialogsModule\n})\nexport class LpDialogsService {\n  constructor(private dialog: MatDialog) { }\n  openConfirmDialog(title: string = 'CONFIRM DELETION', message: string = 'Are you sure?'): Observable<any> {\n    const dialog = new MatDialogConfig();\n    dialog.disableClose = true;\n    dialog.autoFocus = true;\n    dialog.data = { title, message }\n    let dialogRef: MatDialogRef<any> = this.dialog.open(LpConfirmDialogComponent, dialog)\n    return dialogRef.afterClosed()\n  }\n  openInfoDialog(message: string, title: string, item?: string) {\n    const dialog = new MatDialogConfig();\n    dialog.disableClose = true;\n    dialog.autoFocus = true;\n    dialog.data = { message, title, item: item ? item : null }\n    let dialogRef: MatDialogRef<any> = this.dialog.open(LpInfoDialogComponent, dialog)\n    return dialogRef.afterClosed()\n  }\n}\n","/*\n * Public API Surface of lp-dialogs\n */\n\nexport * from './lib/shared/providers/lp-dialogs.service';\nexport * from './lib/lp-dialogs.module';\nexport * from './lib/lp-confirm-dialog/lp-confirm-dialog.component'\nexport * from './lib/lp-info-dialog/lp-info-dialog.component'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}