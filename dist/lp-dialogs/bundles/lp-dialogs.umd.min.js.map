{"version":3,"sources":["../../../projects/lp-dialogs/src/lib/lp-info-dialog/lp-info-dialog.component.ts","../../../projects/lp-dialogs/src/lib/lp-confirm-dialog/lp-confirm-dialog.component.ts","../../../projects/lp-dialogs/src/lib/lp-dialogs.module.ts","../../../projects/lp-dialogs/src/lib/shared/providers/lp-dialogs.service.ts"],"names":["LpInfoDialogComponent","dialogRef","data","this","prototype","ngOnInit","message","title","item","hideModal","close","reportError","Component","args","selector","template","MatDialogRef","Inject","MAT_DIALOG_DATA","LpConfirmDialogComponent","accepted","NgModule","declarations","imports","CommonModule","MatDialogModule","providers","exports","LpDialogsService","dialog","openConfirmDialog","MatDialogConfig","disableClose","autoFocus","open","afterClosed","openInfoDialog","Injectable","providedIn","LpDialogsModule","MatDialog"],"mappings":"+aAaE,SAAAA,EAAoBC,EAAiFC,GAAjFC,KAAAF,UAAAA,EAAiFE,KAAAD,KAAAA,SACrGF,EAAAI,UAAAC,SAAA,WACEF,KAAKG,QAAUH,KAAKD,KAAKI,QACzBH,KAAKI,MAAQJ,KAAKD,KAAKK,MACvBJ,KAAKK,KAAOL,KAAKD,KAAKM,MAExBR,EAAAI,UAAAK,UAAA,WACEN,KAAKF,UAAUS,SAIjBV,EAAAI,UAAAO,YAAA,sCArBDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAA,wcAJOC,EAAAA,6CAY8DC,EAAAA,OAAMJ,KAAA,CAACK,EAAAA,uCCD5E,SAAAC,EAAoBlB,EAAqFC,GAArFC,KAAAF,UAAAA,EAAqFE,KAAAD,KAAAA,SAEzGiB,EAAAf,UAAAC,SAAA,WACEF,KAAKG,QAAUH,KAAKD,KAAKI,QACzBH,KAAKI,MAAQJ,KAAKD,KAAKK,OAGzBY,EAAAf,UAAAK,UAAA,SAAUW,GACRjB,KAAKF,UAAUS,MAAMU,6BAjBxBR,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAA,+XAJOC,EAAAA,6CAWkEC,EAAAA,OAAMJ,KAAA,CAACK,EAAAA,4BCGlF,iCATCG,EAAAA,SAAQR,KAAA,CAAC,CACRS,aAAc,CAACH,EAAyBnB,GACxCuB,QAAS,CACPC,EAAAA,aACAC,EAAAA,iBAEFC,UAAU,GACVC,QAAS,CAACR,EAA0BnB,wBCFpC,SAAA4B,EAAoBC,GAAA1B,KAAA0B,OAAAA,SACpBD,EAAAxB,UAAA0B,kBAAA,SAAkBvB,EAAoCD,QAApC,IAAAC,IAAAA,EAAA,yBAAoC,IAAAD,IAAAA,EAAA,iBACpD,IAAMuB,EAAS,IAAIE,EAAAA,gBAKnB,OAJAF,EAAOG,cAAe,EACtBH,EAAOI,WAAY,EACnBJ,EAAO3B,KAAO,CAAEK,MAAKA,EAAED,QAAOA,GACKH,KAAK0B,OAAOK,KAAKf,EAA0BU,GAC7DM,eAEnBP,EAAAxB,UAAAgC,eAAA,SAAe9B,EAAiBC,EAAeC,GAC7C,IAAMqB,EAAS,IAAIE,EAAAA,gBAKnB,OAJAF,EAAOG,cAAe,EACtBH,EAAOI,WAAY,EACnBJ,EAAO3B,KAAO,CAAEI,QAAOA,EAAEC,MAAKA,EAAEC,KAAMA,GAAc,MACjBL,KAAK0B,OAAOK,KAAKlC,EAAuB6B,GAC1DM,uJAnBpBE,EAAAA,WAAUxB,KAAA,CAAC,CACVyB,WAAYC,+CAPLC,EAAAA","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-lp-info-dialog',\n  templateUrl: './lp-info-dialog.component.html',\n  styleUrls: ['./lp-info-dialog.component.scss']\n})\nexport class LpInfoDialogComponent implements OnInit {\n\n  message: string\n  item: string\n  title: string\n  constructor(private dialogRef: MatDialogRef<LpInfoDialogComponent>, @Inject(MAT_DIALOG_DATA) private data) { }\n  ngOnInit(): void {\n    this.message = this.data.message;\n    this.title = this.data.title;\n    this.item = this.data.item;\n  }\n  hideModal() {\n    this.dialogRef.close()\n  }\n\n  /// MUST CREATE A BACKEND TO REPORT ERRORS ///\n  reportError() { }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-lp-confirm-dialog',\n  templateUrl: './lp-confirm-dialog.component.html',\n  styleUrls: ['./lp-confirm-dialog.component.scss']\n})\nexport class LpConfirmDialogComponent implements OnInit {\n\n  message: string\n  title: string\n  constructor(private dialogRef: MatDialogRef<LpConfirmDialogComponent >, @Inject(MAT_DIALOG_DATA) private data) { }\n\n  ngOnInit(): void {\n    this.message = this.data.message;\n    this.title = this.data.title;\n  }\n\n  hideModal(accepted: boolean) {\n    this.dialogRef.close(accepted)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { LpConfirmDialogComponent } from './lp-confirm-dialog/lp-confirm-dialog.component';\nimport { LpInfoDialogComponent } from './lp-info-dialog/lp-info-dialog.component';\n\n@NgModule({\n  declarations: [LpConfirmDialogComponent,LpInfoDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule\n  ],\n  providers:[],\n  exports: [LpConfirmDialogComponent, LpInfoDialogComponent]\n})\nexport class LpDialogsModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { LpInfoDialogComponent } from '../../lp-info-dialog/lp-info-dialog.component';\nimport { LpConfirmDialogComponent } from '../../lp-confirm-dialog/lp-confirm-dialog.component';\nimport { LpDialogsModule } from '../../lp-dialogs.module';\n\n@Injectable({\n  providedIn: LpDialogsModule\n})\nexport class LpDialogsService {\n  constructor(private dialog: MatDialog) { }\n  openConfirmDialog(title: string = 'CONFIRM DELETION', message: string = 'Are you sure?'): Observable<any> {\n    const dialog = new MatDialogConfig();\n    dialog.disableClose = true;\n    dialog.autoFocus = true;\n    dialog.data = { title, message }\n    let dialogRef: MatDialogRef<any> = this.dialog.open(LpConfirmDialogComponent, dialog)\n    return dialogRef.afterClosed()\n  }\n  openInfoDialog(message: string, title: string, item?: string) {\n    const dialog = new MatDialogConfig();\n    dialog.disableClose = true;\n    dialog.autoFocus = true;\n    dialog.data = { message, title, item: item ? item : null }\n    let dialogRef: MatDialogRef<any> = this.dialog.open(LpInfoDialogComponent, dialog)\n    return dialogRef.afterClosed()\n  }\n}\n"]}