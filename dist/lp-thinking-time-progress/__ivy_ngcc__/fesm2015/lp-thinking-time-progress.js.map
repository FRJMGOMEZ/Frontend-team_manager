{"version":3,"file":"lp-thinking-time-progress.js","sources":["../../../projects/lp-thinking-time-progress/src/lib/lp-thinking-time-progress/lp-thinking-time-progress.component.ts","../../../projects/lp-thinking-time-progress/src/lib/lp-thinking-time-progress.module.ts","../../../projects/lp-thinking-time-progress/src/public-api.ts","../../../projects/lp-thinking-time-progress/src/lp-thinking-time-progress.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;MAQa,+BAA+B;AAAG,IAU7C;AAAgB,QAPP,aAAQ,GAAW,CAAC,CAAC;AAChC,QAAW,SAAI,GAAW,KAAK,CAAC;AAChC,QAAW,aAAQ,GAAU,CAAC,CAAC;AAC/B,QAAW,aAAQ,GAAU,EAAE,CAAC;AAChC,QAAY,QAAG,GAAG,IAAI,YAAY,EAAW,CAAA;AAC7C,KAEmB;AACnB,IACE,QAAQ;AACV,KAAG;AACH,IACE,WAAW,CAAC,OAAqB;AAClC,QAAG,IAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAC;AACjC,YAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC;AACvE,gBAAU,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;AACpC,oBAAY,IAAI,CAAC,QAAQ,EAAE,CAAA;AAC3B,iBAAW;AAAC,qBAAK;AACjB,oBAAY,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;AAChD,oBAAY,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC9B,oBAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,iBAAW;AACX,aAAS,CAAC,CAAA;AACV,SAAO;AAAC,aAAG;AACX,YAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAE,IAAI,CAAC;AAC1E,YAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC1B,SAAO;AACP,KAAG;AACH,IAAE,YAAY;AACd,QAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;AACxC,QAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACtB,QAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,gBAAgB,GAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAE,IAAI,CAAC;AACrE,KAAG;AACH;2DA7CC,SAAS,SAAC,kBACT,QAAQ,EAAE,2BAA2B;CACrC,wYAAyD,4KAE1D;;;;qQACI;AAAC;AACN;AAGgB,uBADb,KAAK;AAAK,mBACV,KAAK;AAAK,uBACV,KAAK;AAAK,uBACV,KAAK;AAAK,kBACV,MAAM;AAAI;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCIJ,4BAA4B;AAAG;wDAb3C,QAAQ,SAAC,kBACR;EAAY,EAAE,sBACZ,+BAA+B,kBAChC,kBACD,OAAO,EAAE,sBACR,YAAY,sBACZ,aAAa;MACb;IAAwB,kBACxB;aACD,OAAO,EAAE;OACP;uBAA+B,kBAChC,cACF;;;;;;;;;;;;;;;;;;0BACI;AAAC;ACnBN;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AAC4C","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { Subscription, interval } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'lp-thinking-time-progress',\r\n  templateUrl: './lp-thinking-time-progress.component.html',\r\n  styleUrls: ['./lp-thinking-time-progress.component.css']\r\n})\r\nexport class LpThinkingTimeProgressComponent implements OnInit {\r\n\r\n\r\n  @Input() progress: number = 0;\r\n  @Input() show:boolean = false;\r\n  @Input() velocity:number = 5;\r\n  @Input() diameter:number = 60;\r\n  @Output() end = new EventEmitter<boolean>()\r\n  timeSubscription:Subscription;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes:SimpleChanges){\r\n    if(changes.show && this.show){\r\n        this.timeSubscription = interval(this.velocity * 30).subscribe(() => {\r\n          if (this.progress <= 100) {\r\n            this.progress++\r\n          } else {\r\n            this.timeSubscription.unsubscribe();\r\n            this.progress = 0;\r\n            this.end.emit(true);\r\n          }\r\n        })\r\n      }else{\r\n        this.timeSubscription ? this.timeSubscription.unsubscribe(): null;\r\n        this.progress = 0;\r\n      }\r\n  }\r\n  stopProgress() {\r\n    this.timeSubscription.unsubscribe();\r\n    this.progress = 0;\r\n    this.end.emit(false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.timeSubscription? this.timeSubscription.unsubscribe(): null;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { LpThinkingTimeProgressComponent } from './lp-thinking-time-progress/lp-thinking-time-progress.component';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    LpThinkingTimeProgressComponent\n  ],\n  imports: [\n   CommonModule,\n   MatIconModule,\n   MatProgressSpinnerModule\n  ],\n  exports: [\n    LpThinkingTimeProgressComponent\n  ]\n})\nexport class LpThinkingTimeProgressModule { }\n","/*\n * Public API Surface of lp-thinking-time-progress\n */\n\n\nexport * from './lib/lp-thinking-time-progress.module';\nexport * from './lib/lp-thinking-time-progress/lp-thinking-time-progress.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}