!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms")):"function"==typeof define&&define.amd?define("lp-input-trimmer",["exports","@angular/core","@angular/forms"],t):t((e=e||self)["lp-input-trimmer"]={},e.ng.core,e.ng.forms)}(this,(function(e,t,n){"use strict";var r=function(){function e(e,t){this.el=e,this.renderer=t,this.propagateChange=function(e){}}return e.prototype.onChange=function(e){this.propagateChange(e.trim())},e.prototype.writeValue=function(e){var t=null==e?"":e;this.renderer.setProperty(this.el.nativeElement,"value",t)},e.prototype.registerOnChange=function(e){this.propagateChange=e},e.prototype.registerOnTouched=function(){},e}();r.ɵfac=function(e){return new(e||r)(t.ɵɵdirectiveInject(t.ElementRef),t.ɵɵdirectiveInject(t.Renderer2))},r.ɵdir=t.ɵɵdefineDirective({type:r,selectors:[["","lpInputTrimmer",""]],hostBindings:function(e,n){1&e&&t.ɵɵlistener("input",(function(e){return n.onChange(e.target.value)}))},features:[t.ɵɵProvidersFeature([{provide:n.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return r})),multi:!0}])]});var i=function(){};i.ɵmod=t.ɵɵdefineNgModule({type:i}),i.ɵinj=t.ɵɵdefineInjector({factory:function(e){return new(e||i)},imports:[[]]}),("undefined"==typeof ngJitMode||ngJitMode)&&t.ɵɵsetNgModuleScope(i,{declarations:[r],exports:[r]}),e.LpInputTrimmerDirective=r,e.LpInputTrimmerModule=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=lp-input-trimmer.umd.min.js.map