{"version":3,"file":"lp-routes-breadcrumbs.js","sources":["../../../projects/lp-routes-breadcrumbs/src/lib/lp-routes-breadcrumbs.module.ts","../../../projects/lp-routes-breadcrumbs/src/lib/lp-routes-breadcrumbs.service.ts","../../../projects/lp-routes-breadcrumbs/src/public-api.ts","../../../projects/lp-routes-breadcrumbs/src/lp-routes-breadcrumbs.ts"],"names":[],"mappings":";;;;;;MASa,yBAAyB;AAAG;qDAPxC,QAAQ,SAAC,kBACR;KAAY,EAAE,EAAE,kBAChB,OAAO,EAAE,EACR,kBACD,OAAO,EAAE,EAAE,kBACX,SAAS,EAAC,CAAC,yBAAyB,CAAC,cACtC;;;;;;;;;;0BACI;AAAC;AAAC,MCDM,0BAA0B;AACvC,IAKE,YAAoB,MAAc;AACpC,QADsB,WAAM,GAAN,MAAM,CAAQ;AAAC,QAJ3B,oBAAe,GAAgD,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAA;AAC5G,QACU,kBAAa,GAAgD,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAA;AAC1G,QAGI,IAAI,CAAC,yBAAyB,EAAE,CAAC;AACrC,QAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACnC,KAAG;AACH,IACE,yBAAyB;AAC3B,QAAI,IAAI,CAAC,MAAM,CAAC,MAAM;AACtB,aAAO,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,OAAO,OAAO,KAAK,YAAY,eAAe,CAAA,EAAE,CAAC,CAAC;AAC3E,aAAO,SAAS,CAAC,CAAC,KAAU;AAC5B,YAAQ,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;AAC3E,YAAQ,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;AACpD,SAAO,CAAC,CAAA;AACR,KAAG;AACH,IACE,uBAAuB;AACzB,QAAI,IAAI,CAAC,MAAM,CAAC,MAAM;AACtB,aAAO,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,OAAO,OAAO,KAAK,YAAY,aAAa,CAAA,EAAE,CAAC,CAAC;AACzE,aAAO,SAAS,CAAC,CAAC,KAAU;AAC5B,YAAQ,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;AACvE,YAAQ,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;AAClD,SAAO,CAAC,CAAA;AACR,KAAG;AACH,IACE,WAAW;AAAK,QACd,OAAO,IAAI,CAAC,eAAe,CAAA;AAC/B,KAAG;AACH,IAAE,SAAS;AAAK,QACZ,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,KAAG;AACH;mKAAC;AACD,yPArCK;AAAC;EAHL,UAAU,ZAKI,YATN,MAAM;AAIH,AAJM;eAKhB,UAAU,EAAE,yBAAyB,cACtC;;;;;uEANmB;AAAC;ACDrB;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACoC","sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: [],\n  providers:[LpRoutesBreadcrumbsModule]\n})\nexport class LpRoutesBreadcrumbsModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { LpRoutesBreadcrumbsModule } from './lp-routes-breadcrumbs.module';\n\n@Injectable({\n  providedIn: LpRoutesBreadcrumbsModule\n})\nexport class LpRoutesBreadcrumbsService {\n\n  private navigationStart: { currentUrl: string, previousUrl: string } = { currentUrl: '', previousUrl: '' }\n\n  private navigationEnd: { currentUrl: string, previousUrl: string } = { currentUrl: '', previousUrl: '' }\n\n  constructor(private router: Router) {\n\n    this.listenningNavigationStart();\n    this.listenningNavigationEnd();\n  }\n\n  listenningNavigationStart() {\n    this.router.events\n      .pipe(filter((event) => { return event instanceof NavigationStart }))\n      .subscribe((event: any) => {\n        this.navigationStart.previousUrl = this.navigationStart.currentUrl;\n        this.navigationStart.currentUrl = event.url;\n      })\n  }\n\n  listenningNavigationEnd() {\n    this.router.events\n      .pipe(filter((event) => { return event instanceof NavigationEnd }))\n      .subscribe((event: any) => {\n        this.navigationEnd.previousUrl = this.navigationEnd.currentUrl;\n        this.navigationEnd.currentUrl = event.url;\n      })\n  }\n\n  getNavStart(): { currentUrl: string, previousUrl: string } {\n    return this.navigationStart\n  }\n  getNavEnd(): { currentUrl: string, previousUrl: string } {\n    return this.navigationEnd;\n  }\n}\n","/*\n * Public API Surface of lp-routes-breadcrumbs\n */\n\nexport * from './lib/lp-routes-breadcrumbs.service';\nexport * from './lib/lp-routes-breadcrumbs.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}