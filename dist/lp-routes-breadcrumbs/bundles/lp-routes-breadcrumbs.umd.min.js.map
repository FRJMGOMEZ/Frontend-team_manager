{"version":3,"sources":["../../../projects/lp-routes-breadcrumbs/src/lib/lp-routes-breadcrumbs.module.ts","../../../projects/lp-routes-breadcrumbs/src/lib/lp-routes-breadcrumbs.service.ts"],"names":["NgModule","args","declarations","imports","exports","providers","LpRoutesBreadcrumbsModule","LpRoutesBreadcrumbsService","router","this","navigationStart","currentUrl","previousUrl","navigationEnd","listenningNavigationStart","listenningNavigationEnd","prototype","_this","events","pipe","filter","event","NavigationStart","subscribe","url","NavigationEnd","getNavStart","getNavEnd","Injectable","providedIn","Router"],"mappings":"kaASA,iCAPCA,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,GACdC,QAAS,GAETC,QAAS,GACTC,UAAU,CAACC,wBCOX,SAAAC,EAAoBC,GAAAC,KAAAD,OAAAA,EAJZC,KAAAC,gBAA+D,CAAEC,WAAY,GAAIC,YAAa,IAE9FH,KAAAI,cAA6D,CAAEF,WAAY,GAAIC,YAAa,IAIlGH,KAAKK,4BACLL,KAAKM,iCAGPR,EAAAS,UAAAF,0BAAA,WAAA,IAAAG,EAAAR,KACEA,KAAKD,OAAOU,OACTC,KAAKC,EAAAA,QAAO,SAACC,GAAY,OAAOA,aAAiBC,EAAAA,oBACjDC,WAAU,SAACF,GACVJ,EAAKP,gBAAgBE,YAAcK,EAAKP,gBAAgBC,WACxDM,EAAKP,gBAAgBC,WAAaU,EAAMG,QAI9CjB,EAAAS,UAAAD,wBAAA,WAAA,IAAAE,EAAAR,KACEA,KAAKD,OAAOU,OACTC,KAAKC,EAAAA,QAAO,SAACC,GAAY,OAAOA,aAAiBI,EAAAA,kBACjDF,WAAU,SAACF,GACVJ,EAAKJ,cAAcD,YAAcK,EAAKJ,cAAcF,WACpDM,EAAKJ,cAAcF,WAAaU,EAAMG,QAI5CjB,EAAAS,UAAAU,YAAA,WACE,OAAOjB,KAAKC,iBAEdH,EAAAS,UAAAW,UAAA,WACE,OAAOlB,KAAKI,oJArCfe,EAAAA,WAAU3B,KAAA,CAAC,CACV4B,WAAYvB,+CALLwB,EAAAA","sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: [],\n  providers:[LpRoutesBreadcrumbsModule]\n})\nexport class LpRoutesBreadcrumbsModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { LpRoutesBreadcrumbsModule } from './lp-routes-breadcrumbs.module';\n\n@Injectable({\n  providedIn: LpRoutesBreadcrumbsModule\n})\nexport class LpRoutesBreadcrumbsService {\n\n  private navigationStart: { currentUrl: string, previousUrl: string } = { currentUrl: '', previousUrl: '' }\n\n  private navigationEnd: { currentUrl: string, previousUrl: string } = { currentUrl: '', previousUrl: '' }\n\n  constructor(private router: Router) {\n\n    this.listenningNavigationStart();\n    this.listenningNavigationEnd();\n  }\n\n  listenningNavigationStart() {\n    this.router.events\n      .pipe(filter((event) => { return event instanceof NavigationStart }))\n      .subscribe((event: any) => {\n        this.navigationStart.previousUrl = this.navigationStart.currentUrl;\n        this.navigationStart.currentUrl = event.url;\n      })\n  }\n\n  listenningNavigationEnd() {\n    this.router.events\n      .pipe(filter((event) => { return event instanceof NavigationEnd }))\n      .subscribe((event: any) => {\n        this.navigationEnd.previousUrl = this.navigationEnd.currentUrl;\n        this.navigationEnd.currentUrl = event.url;\n      })\n  }\n\n  getNavStart(): { currentUrl: string, previousUrl: string } {\n    return this.navigationStart\n  }\n  getNavEnd(): { currentUrl: string, previousUrl: string } {\n    return this.navigationEnd;\n  }\n}\n"]}