{"version":3,"sources":["../../../projects/lp-date-pipes/src/lib/lp-parse-date.pipe.ts","../../../projects/lp-date-pipes/src/lib/lp-parse-hour.pipe.ts","../../../projects/lp-date-pipes/src/lib/lp-date-pipes.module.ts"],"names":["LpParseDatePipe","prototype","transform","time","to","converted","getTime","Date","Pipe","args","name","LpParseHourPipe","hour","format","result","Number","split","length","NgModule","declarations","imports","exports"],"mappings":"oSAIA,SAAAA,YACEA,EAAAC,UAAAC,UAAA,SAAUC,EAAqBC,GAC7B,IAAIC,EACJ,GAAa,OAATF,EACF,OAAO,KAET,OAAQC,GACN,IAAK,cAAeC,EAAaF,EAAcG,UAC7C,MACF,IAAK,OAAQD,EAAY,IAAIE,KAAMJ,GAGrC,OAAOE,4BAdVG,EAAAA,KAAIC,KAAA,CAAC,CACJC,KAAM,mCCER,SAAAC,YAEEA,EAAAV,UAAAC,UAAA,SAAUU,EAAaC,GAErB,GAAY,OAATD,EACD,OAAO,KAET,IAAIE,EACJ,OAAOD,GACL,IAAK,QAASC,EAAUC,OAAOH,EAAKI,MAAM,KAAK,IAAM,GAAM,EAAOD,OAAOH,EAAKI,MAAM,KAAK,IAAM,GAAE,IAAID,OAAOH,EAAKI,MAAM,KAAK,IAAG,MAAWJ,EAAI,MAC9I,MACA,IAAK,KAAME,EAAwD,OAA/CF,EAAKI,MAAM,KAAKJ,EAAKI,MAAM,KAAKC,OAAQ,GAAc,GAAGL,EAAKI,MAAM,KAAK,GAAUD,OAAOH,EAAKI,MAAM,KAAK,GAAGA,MAAM,KAAK,IAAI,GAAE,IAAIJ,EAAKI,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGtL,OAAOF,4BAjBVN,EAAAA,KAAIC,KAAA,CAAC,CACJC,KAAM,wBCOR,iCANCQ,EAAAA,SAAQT,KAAA,CAAC,CACRU,aAAc,CAACnB,EAAiBW,GAChCS,QAAS,GAETC,QAAS,CAACrB,EAAiBW","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'lpParseDate'})\nexport class LpParseDatePipe implements PipeTransform {\n  transform(time: Date | number, to: string): unknown {\n    let converted;\n    if (time === null) {\n      return null\n    }\n    switch (to) {\n      case 'miliseconds': converted = (time as Date).getTime();\n        break;\n      case 'date': converted = new Date((time as number))\n        break;\n    }\n    return converted;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'lpParseHour'\n})\nexport class LpParseHourPipe implements PipeTransform {\n\n  transform(hour:string, format:string): string {\n\n    if(hour === null){\n      return null\n    }\n    let result;\n    switch(format){\n      case 'AM/PM': result = (Number(hour.split(':')[0]) - 12) > 0 ? `${Number(hour.split(':')[0]) - 12}:${Number(hour.split(':')[1])} PM` : `${hour} AM`;\n      break;\n      case '24': result = hour.split(' ')[hour.split(' ').length -1] === 'AM' ? `${hour.split(' ')[0]}` : `${Number(hour.split(' ')[0].split(':')[0])+12}:${hour.split(' ')[0].split(':')[1]}`;\n      break;\n    }\n    return result;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LpParseHourPipe } from './lp-parse-hour.pipe';\nimport { LpParseDatePipe } from './lp-parse-date.pipe';\n\n@NgModule({\n  declarations: [LpParseDatePipe, LpParseHourPipe],\n  imports: [\n  ],\n  exports: [LpParseDatePipe, LpParseHourPipe]\n})\nexport class LpDatePipesModule { }\n"]}