{"version":3,"file":"lp-date-pipes.umd.js","sources":["../../../projects/lp-date-pipes/src/lib/lp-parse-date.pipe.ts","../../../projects/lp-date-pipes/src/lib/lp-parse-hour.pipe.ts","../../../projects/lp-date-pipes/src/lib/lp-date-pipes.module.ts","../../../projects/lp-date-pipes/src/public-api.ts","../../../projects/lp-date-pipes/src/lp-date-pipes.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'lpParseDate'})\nexport class LpParseDatePipe implements PipeTransform {\n  transform(time: Date | number, to: string): unknown {\n    let converted;\n    if (time === null) {\n      return null\n    }\n    switch (to) {\n      case 'miliseconds': converted = (time as Date).getTime();\n        break;\n      case 'date': converted = new Date((time as number))\n        break;\n    }\n    return converted;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'lpParseHour'\n})\nexport class LpParseHourPipe implements PipeTransform {\n\n  transform(hour:string, format:string): string {\n\n    if(hour === null){\n      return null\n    }\n    let result;\n    switch(format){\n      case 'AM/PM': result = (Number(hour.split(':')[0]) - 12) > 0 ? `${Number(hour.split(':')[0]) - 12}:${Number(hour.split(':')[1])} PM` : `${hour} AM`;\n      break;\n      case '24': result = hour.split(' ')[hour.split(' ').length -1] === 'AM' ? `${hour.split(' ')[0]}` : `${Number(hour.split(' ')[0].split(':')[0])+12}:${hour.split(' ')[0].split(':')[1]}`;\n      break;\n    }\n    return result;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LpParseHourPipe } from './lp-parse-hour.pipe';\nimport { LpParseDatePipe } from './lp-parse-date.pipe';\n\n@NgModule({\n  declarations: [LpParseDatePipe, LpParseHourPipe],\n  imports: [\n  ],\n  exports: [LpParseDatePipe, LpParseHourPipe]\n})\nexport class LpDatePipesModule { }\n","/*\n * Public API Surface of lp-date-pipes\n */\n\nexport * from './lib/lp-parse-date.pipe';\nexport * from './lib/lp-parse-hour.pipe';\nexport * from './lib/lp-date-pipes.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Pipe","NgModule"],"mappings":";;;;;;;QAIA;;QACE,mCAAS,GAAT,UAAU,IAAmB,EAAE,EAAU;YACvC,IAAI,SAAS,CAAC;YACd,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAA;aACZ;YACD,QAAQ,EAAE;gBACR,KAAK,aAAa;oBAAE,SAAS,GAAI,IAAa,CAAC,OAAO,EAAE,CAAC;oBACvD,MAAM;gBACR,KAAK,MAAM;oBAAE,SAAS,GAAG,IAAI,IAAI,CAAE,IAAe,CAAC,CAAA;oBACjD,MAAM;aACT;YACD,OAAO,SAAS,CAAC;SAClB;;;;gBAfFA,SAAI,SAAC;oBACJ,IAAI,EAAE,aAAa;iBAAC;;;;QCEtB;;QAEE,mCAAS,GAAT,UAAU,IAAW,EAAE,MAAa;YAElC,IAAG,IAAI,KAAK,IAAI,EAAC;gBACf,OAAO,IAAI,CAAA;aACZ;YACD,IAAI,MAAM,CAAC;YACX,QAAO,MAAM;gBACX,KAAK,OAAO;oBAAE,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,SAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAK,GAAM,IAAI,QAAK,CAAC;oBACpJ,MAAM;gBACN,KAAK,IAAI;oBAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAE,CAAC,CAAC,KAAK,IAAI,GAAG,KAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAG,GAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,SAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAG,CAAC;oBACzL,MAAM;aACP;YACD,OAAO,MAAM,CAAC;SACf;;;;gBAlBFA,SAAI,SAAC;oBACJ,IAAI,EAAE,aAAa;iBACpB;;;;QCMD;;;;;gBANCC,aAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC;oBAChD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC;iBAC5C;;;ICTD;;;;ICAA;;;;;;;;;;;;;;;;"}