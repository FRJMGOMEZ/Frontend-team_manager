{"version":3,"file":"lp-operations.js","sources":["../../../projects/lp-operations/src/lp-array.ts","../../../projects/lp-operations/src/lp-date.ts","../../../projects/lp-operations/src/lp-html.ts","../../../projects/lp-operations/src/lp-object.ts","../../../projects/lp-operations/src/public-api.ts","../../../projects/lp-operations/src/lp-operations.ts"],"names":[],"mappings":"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","sourcesContent":["export class LpArray {\n    public static divideArray(array: any[], size: number) {\n        const chunked_arr = [];\n        for (let i = 0; i < array.length; i++) {\n            const last = chunked_arr[chunked_arr.length - 1];\n            if (!last || last.length === size) {\n                chunked_arr.push([array[i]]);\n            } else {\n                last.push(array[i]);\n            }\n        }\n        return chunked_arr;\n    }\n    public static update(oldArray, item, method: string) {\n        let updated\n        switch (method) {\n            case 'POST':\n                updated = [...oldArray, item];\n                break;\n            case 'PUT':\n                updated = oldArray.map((eachItem) => { return eachItem._id === item._id ? item : eachItem })\n                break;\n            case 'DELETE':\n                updated = oldArray.filter((eachItem) => { return eachItem._id != item._id })\n                break;\n        }\n        return updated\n    }\n\n    public static hasItem(array, item): boolean {\n        if (array.map((eachItem) => { return eachItem._id }).includes(item._id)) {\n            return true\n        }\n        return false;\n    }\n\n}\n","export class LpDate {\n\n    public static dateComparison(date1: Date, date2: Date) {\n        if ((date1.getFullYear() === date2.getFullYear()) && (date1.getMonth() === date2.getMonth()) && (date1.getDate() === date2.getDate())) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    public static isRangeInRange(event: { start: Date, end: Date }, dayRange: { start: Date, end: Date }) {\n        /// check if range2 is  in range1 ///\n        if (event.start <= dayRange.start && event.end >= dayRange.end) {\n            return true\n        }\n        return false\n    }\n\n    public static createMonthlyRange(selectedDate: Date): { start: Date, end: Date } {\n        let monthDays = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate();\n        let lastMonthDay = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), monthDays, 0, 0, 0, 0);\n        let firstMonthDay = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1, 0, 0, 0, 0);\n        let range = { start: null, end: null };\n        let start = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1 - firstMonthDay.getDay())\n        let end = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), monthDays + (6 - lastMonthDay.getDay()), 23, 59, 59, 0)\n        range.start = start;\n        range.end = end;\n        return range;\n    }\n\n    public static milisecondsToPeriod(milisecs1: number, milisecs2: number) {\n        let durationString = [];\n        let miliseconds = milisecs2 - milisecs1;\n        let seconds = miliseconds / 1000;\n        if (Number(String(seconds).split('.')[0]) > 0) {\n            seconds = Number(String(seconds).split('.')[0]);\n            let minutes = seconds / 60;\n            if (Number(String(minutes).split('.')[0]) > 0) {\n                minutes = Number(String(minutes).split('.')[0]);\n                let hours = minutes / 60;\n                if (Math.round((Number('0.' + String(hours).split('.')[1]) * 60)) >= 1) { durationString.push(Math.round(Number('0.' + String(hours).split('.')[1]) * 60) + (Math.round(Number('0.' + String(hours).split('.')[1]) * 60) > 1 ? ' minutes' : ' minute')) }\n                if (Number(String(hours).split('.')[0]) > 0) {\n                    hours = Number(String(hours).split('.')[0]);\n                    let days = hours / 24;\n                    if (Math.round((Number('0.' + String(days).split('.')[1]) * 24)) >= 1) { durationString.push(Math.round((Number('0.' + String(days).split('.')[1]) * 24)) + (Math.round(Number('0.' + String(days).split('.')[1]) * 24) > 1 ? ' hours' : ' hour')) }\n                    if (Number(String(days).split('.')[0]) > 0) {\n                        days = Number(String(days).split('.')[0]);\n                        durationString.push(`${days} days`)\n                    }\n                }\n            }\n        }\n        return durationString.reverse();\n    }\n\n    public static milisecsToString(milisecs) {\n        return this.milisecondsToPeriod(0, milisecs)\n    }\n\n    public static monthValue(month: string | number) {\n        let value;\n        if (typeof month === 'string') {\n            switch (month) {\n                case 'january': value = 0;\n                    break;\n                case 'february': value = 1;\n                    break;\n                case 'march': value = 2;\n                    break;\n                case 'april': value = 3;\n                    break;\n                case 'may': value = 4;\n                    break;\n                case 'june': value = 5;\n                    break;\n                case 'july': value = 6;\n                    break;\n                case 'august': value = 7;\n                    break;\n                case 'september': value = 8;\n                    break;\n                case 'october': value = 9;\n                    break;\n                case 'november': value = 10;\n                    break;\n                case 'december': value = 11;\n                    break;\n            }\n        } else {\n            switch (month) {\n                case 0: value = 'january';\n                    break;\n                case 1: value = 'february';\n                    break;\n                case 2: value = 'march';\n                    break;\n                case 3: value = 'april';\n                    break;\n                case 4: value = 'may';\n                    break;\n                case 5: value = 'june';\n                    break;\n                case 6: value = 'july';\n                    break;\n                case 7: value = 'august';\n                    break;\n                case 8: value = 'september';\n                    break;\n                case 9: value = 'october';\n                    break;\n                case 10: value = 'october';\n                    break;\n                case 11: value = 'december';\n                    break;\n            }\n        }\n        return value.toString();\n    }\n}\n","export class LpHtml {\n\n\n    public static formatTextToHtml(text: string) {\n        let content: string[] = [];\n        content = text.split('\\n');\n        let message = [];\n        content.forEach((extract) => {\n            if (extract === '') {\n                message.push('<br>')\n            } else {\n                let extractSplitted = extract.split(' ')\n                extractSplitted.forEach((piece: string, index: number) => {\n                    if (piece === '') {\n                        extractSplitted[index] = '&nbsp'\n                    }\n                })\n                let p = `<p>${extractSplitted.join(' ')}</p>`;\n                let pSplit = p.split('\\n');\n                pSplit.forEach((piece, index) => {\n                    message.push(piece)\n                })\n            }\n        })\n        return message.join(' ')\n    }\n}\n","export class LpObject {\n\n    public static copyObject(object: any) {\n        return JSON.parse(JSON.stringify(object));\n    }\n\n    public static areEquals(obj1: any, obj2: any): boolean {\n        if (typeof obj1 !== typeof obj2) {\n            return false;\n        }\n        if ((obj1 === undefined && obj2 !== undefined) ||\n            (obj1 === undefined && obj1 !== undefined) ||\n            (obj1 === null && obj2 !== null) ||\n            (obj2 === null && obj1 !== null)) {\n            return false;\n        }\n        if (typeof obj1 === 'object') {\n            if (Array.isArray(obj1)) {\n                if (!Array.isArray(obj2) || obj1.length !== obj2.length) {\n                    return false;\n                }\n                for (let i = 0; i < obj1.length; i++) {\n                    if (!this.areEquals(obj1[i], obj2[i])) {\n                        return false;\n                    }\n                }\n            } else {\n                for (let prop in obj1) {\n                    if (obj1.hasOwnProperty(prop)) {\n                        if (!obj2.hasOwnProperty(prop)) {\n                            return false;\n                        }\n                        //Endless loop fix for recursive properties\n                        if (!this.areEquals(obj1[prop], obj2[prop])) {\n\n                            return false;\n                        }\n                    }\n                }\n                for (let prop in obj2) {\n                    if (obj2.hasOwnProperty(prop)) {\n                        if (!obj1.hasOwnProperty(prop)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        }\n        return obj1 === obj2;\n    }\n    public static getObjectDifferences(obj1, obj2) {\n        let differences: { [key: string]: any } = {};\n        Object.keys(obj1).forEach((key1, index) => {\n            Object.keys(obj2).forEach((key2) => {\n                if (key1 === key2) {\n                    if (typeof obj1[key1] === 'object') {\n                        if (!this.areEquals(obj1[key1], obj2[key2])) {\n                            differences[key2] = obj2[key2]\n                        }\n                    } else {\n                        if (obj1[key1] != obj2[key2]) {\n                            differences[key2] = obj2[key2]\n                        }\n                    }\n                }\n            })\n        })\n        return differences\n    }\n\n    public static mergeObjects(initialObj, newObj) {\n        initialObj = this.copyObject(initialObj);\n        Object.keys(initialObj).forEach((iKey) => {\n            Object.keys(newObj).forEach((nKey) => {\n                if (iKey === nKey) {\n                    initialObj[iKey] = newObj[nKey]\n                }\n            })\n        })\n        return initialObj;\n    }\n\n    public static toQueryString(filters: any): string {\n        let queryString = ''\n        Object.keys(filters).forEach((key) => {\n            if (typeof filters[key] === 'object' && filters[key] !== null && !filters[key].length) {\n                Object.keys(filters[key]).forEach((subKey) => {\n                    queryString += filters[key][subKey] && filters[key][subKey] != null ? `${queryString ? '&' : '?'}${subKey}=${filters[key][subKey]}` : ''\n                })\n            } else if (filters[key] != null && Array.isArray(filters[key])) {\n                queryString += `${queryString ? '&' : '?'}${key}[]=`\n                let arrayParams = '';\n                filters[key].forEach((filter, i) => {\n                    arrayParams += arrayParams ? `,${filter.toString()}` : `${filter.toString()}`\n                })\n                queryString += `${arrayParams}`\n            } else {\n                queryString += filters[key] && filters[key] != null ? `${queryString ? '&' : '?'}${key}=${filters[key]}` : ''\n            }\n        })\n        return queryString\n    }\n}\n","/*\n * Public API Surface of lp-operations\n */\n\nexport * from './lp-array'\nexport * from './lp-date'\nexport * from './lp-html'\nexport * from './lp-object'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}