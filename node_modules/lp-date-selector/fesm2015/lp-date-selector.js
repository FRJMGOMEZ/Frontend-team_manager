import { Component, forwardRef, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { LpDate } from 'lp-operations';
import { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';
import { MatButtonModule } from '@angular/material/button';
import { MatInputModule } from '@angular/material/input';
import { MatSelectModule } from '@angular/material/select';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatNativeDateModule } from '@angular/material/core';

class LpDateSelectorComponent {
    constructor() {
        this.disabled = false;
        this.monthOptions = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];
        this.propagateChange = (_) => { };
    }
    writeValue(date) {
        this.selectedDate = date;
    }
    registerOnChange(fn) { this.propagateChange = fn; }
    registerOnTouched() { }
    setDate(date, year, month) {
        if (date) {
            this.selectedDate = date;
            this.propagateChange(this.selectedDate);
        }
        else if (year.length === 4) {
            this.selectedDate = new Date(Number(year), Number(month), 1, 0, 0, 0, 0);
            this.propagateChange(this.selectedDate);
        }
    }
    monthValue(month) {
        return LpDate.monthValue(month);
    }
}
LpDateSelectorComponent.decorators = [
    { type: Component, args: [{
                selector: 'lp-date-selector',
                template: "\n\n<div class=\"div-date\" fxLayoutAlign=\"center\" *ngIf=\"dateFormat === 'day'\">\n    <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n        <mat-label>{{label}}</mat-label>\n        <input [min]=\"minDate\" [max]=\"maxDate\" (ngModelChange)=\"setDate($event)\" [disabled]=\"disabled\"  [ngModel]=\"selectedDate\" name=\"date\" #daySelection matInput [matDatepicker]=\"picker\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n</div>\n<div  class=\"div-date\" *ngIf=\"dateFormat === 'month'\" fxLayout.gt-xs=\"row\" fxLayoutAlign=\"center\" fxLayout.xs=\"column\">\n    <mat-form-field fxFlex=\"40\" fxLayoutAlign=\"center\" appearance=\"fill\">\n            <mat-label>Year</mat-label>\n            <input [disabled]=\"disabled\" [min]=\"min ? min.getFullYear():null\" [max]=\"max ? max.getFullYear():null\" (keyup)=\"setDate(null,yearSelection.value, monthSelection.value)\"  #yearSelection [value]=\"selectedDate ? selectedDate.getFullYear().toString() : null\"  matInput\n                onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\" placeholder=\"Year\">\n    </mat-form-field>\n    <mat-form-field fxFlex=\"40\"  fxLayoutAlign=\"center\" appearance=\"fill\">\n            <mat-label>Month</mat-label>\n            <mat-select (selectionChange)=\"setDate(undefined,yearSelection.value, monthSelection.value)\"  #monthSelection [value]=\"selectedDate ? selectedDate.getMonth().toString() : null\"\n                [disabled]=\"!yearSelection.value || disabled\">\n                <mat-option *ngFor=\"let month of monthOptions\" [value]=\"monthValue(month)\">\n                    {{month}}\n                </mat-option>\n            </mat-select>\n     </mat-form-field>\n</div>\n<div  class=\"div-date\" *ngIf=\"dateFormat === 'time'\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n        <label *ngIf=\"label\" for=\"endDate\">{{label}}</label>\n             <input \n                #timeSelection \n                class=\"input-date\"\n                [owlDateTime]=\"dt2\"\n                [owlDateTimeTrigger]=\"dt2\"\n                [disabled]=\"disabled\" \n                [placeholder]=\"placeholder\" \n                (ngModelChange)=\"setDate($event)\"\n                [min]=\"minDate\" \n                [max]=\"maxDate\"\n                required \n                [ngModel]=\"selectedDate\" \n                matInput \n                readonly>\n        <owl-date-time #dt2></owl-date-time>\n</div>\n\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => LpDateSelectorComponent),
                        multi: true,
                    }
                ],
                styles: [".div-date{margin:5px}.div-date .input-date{cursor:pointer}.div-date mat-form-field{width:200px!important}"]
            },] }
];
LpDateSelectorComponent.ctorParameters = () => [];
LpDateSelectorComponent.propDecorators = {
    dateFormat: [{ type: Input }],
    selectedDate: [{ type: Input }],
    minDate: [{ type: Input }],
    maxDate: [{ type: Input }],
    placeholder: [{ type: Input }],
    label: [{ type: Input }],
    disabled: [{ type: Input }]
};

class LpDateSelectorModule {
}
LpDateSelectorModule.decorators = [
    { type: NgModule, args: [{
                declarations: [LpDateSelectorComponent],
                imports: [
                    CommonModule,
                    OwlDateTimeModule,
                    OwlNativeDateTimeModule,
                    MatButtonModule,
                    MatInputModule,
                    MatSelectModule,
                    MatTooltipModule,
                    MatDatepickerModule,
                    MatNativeDateModule,
                    FormsModule,
                    ReactiveFormsModule
                ],
                exports: [
                    LpDateSelectorComponent
                ]
            },] }
];

/*
 * Public API Surface of lp-date-selector
 */

/**
 * Generated bundle index. Do not edit.
 */

export { LpDateSelectorComponent, LpDateSelectorModule };
//# sourceMappingURL=lp-date-selector.js.map
