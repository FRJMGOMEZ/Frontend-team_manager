!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("lp-operations"),require("ng-pick-datetime"),require("@angular/material/button"),require("@angular/material/input"),require("@angular/material/select"),require("@angular/material/tooltip"),require("@angular/material/datepicker"),require("@angular/material/core")):"function"==typeof define&&define.amd?define("lp-date-selector",["exports","@angular/core","@angular/common","@angular/forms","lp-operations","ng-pick-datetime","@angular/material/button","@angular/material/input","@angular/material/select","@angular/material/tooltip","@angular/material/datepicker","@angular/material/core"],t):t((e=e||self)["lp-date-selector"]={},e.ng.core,e.ng.common,e.ng.forms,e.lpOperations,e.ngPickDatetime,e.ng.material.button,e.ng.material.input,e.ng.material.select,e.ng.material.tooltip,e.ng.material.datepicker,e.ng.material.core)}(this,(function(e,t,a,n,l,r,o,i,u,d,m,p){"use strict";var c=function(){function e(){this.disabled=!1,this.monthOptions=["january","february","march","april","may","june","july","august","september","october","november","december"],this.propagateChange=function(e){}}return e.prototype.writeValue=function(e){this.selectedDate=e},e.prototype.registerOnChange=function(e){this.propagateChange=e},e.prototype.registerOnTouched=function(){},e.prototype.setDate=function(e,t,a){e?(this.selectedDate=e,this.propagateChange(this.selectedDate)):4===t.length&&(this.selectedDate=new Date(Number(t),Number(a),1,0,0,0,0),this.propagateChange(this.selectedDate))},e.prototype.monthValue=function(e){return l.LpDate.monthValue(e)},e}();c.decorators=[{type:t.Component,args:[{selector:"lp-date-selector",template:'\n\n<div class="div-date" fxLayoutAlign="center" *ngIf="dateFormat === \'day\'">\n    <mat-form-field fxFlex="100" appearance="fill">\n        <mat-label>{{label}}</mat-label>\n        <input [min]="minDate" [max]="maxDate" (ngModelChange)="setDate($event)" [disabled]="disabled"  [ngModel]="selectedDate" name="date" #daySelection matInput [matDatepicker]="picker">\n        <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n</div>\n<div  class="div-date" *ngIf="dateFormat === \'month\'" fxLayout.gt-xs="row" fxLayoutAlign="center" fxLayout.xs="column">\n    <mat-form-field fxFlex="40" fxLayoutAlign="center" appearance="fill">\n            <mat-label>Year</mat-label>\n            <input [disabled]="disabled" [min]="min ? min.getFullYear():null" [max]="max ? max.getFullYear():null" (keyup)="setDate(null,yearSelection.value, monthSelection.value)"  #yearSelection [value]="selectedDate ? selectedDate.getFullYear().toString() : null"  matInput\n                onkeypress="return event.charCode >= 48 && event.charCode <= 57" placeholder="Year">\n    </mat-form-field>\n    <mat-form-field fxFlex="40"  fxLayoutAlign="center" appearance="fill">\n            <mat-label>Month</mat-label>\n            <mat-select (selectionChange)="setDate(undefined,yearSelection.value, monthSelection.value)"  #monthSelection [value]="selectedDate ? selectedDate.getMonth().toString() : null"\n                [disabled]="!yearSelection.value || disabled">\n                <mat-option *ngFor="let month of monthOptions" [value]="monthValue(month)">\n                    {{month}}\n                </mat-option>\n            </mat-select>\n     </mat-form-field>\n</div>\n<div  class="div-date" *ngIf="dateFormat === \'time\'" fxLayout="column" fxLayoutAlign="center">\n        <label *ngIf="label" for="endDate">{{label}}</label>\n             <input \n                #timeSelection \n                class="input-date"\n                [owlDateTime]="dt2"\n                [owlDateTimeTrigger]="dt2"\n                [disabled]="disabled" \n                [placeholder]="placeholder" \n                (ngModelChange)="setDate($event)"\n                [min]="minDate" \n                [max]="maxDate"\n                required \n                [ngModel]="selectedDate" \n                matInput \n                readonly>\n        <owl-date-time #dt2></owl-date-time>\n</div>\n\n',providers:[{provide:n.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return c})),multi:!0}],styles:[".div-date{margin:5px}.div-date .input-date{cursor:pointer}.div-date mat-form-field{width:200px!important}"]}]}],c.ctorParameters=function(){return[]},c.propDecorators={dateFormat:[{type:t.Input}],selectedDate:[{type:t.Input}],minDate:[{type:t.Input}],maxDate:[{type:t.Input}],placeholder:[{type:t.Input}],label:[{type:t.Input}],disabled:[{type:t.Input}]};var s=function(){};s.decorators=[{type:t.NgModule,args:[{declarations:[c],imports:[a.CommonModule,r.OwlDateTimeModule,r.OwlNativeDateTimeModule,o.MatButtonModule,i.MatInputModule,u.MatSelectModule,d.MatTooltipModule,m.MatDatepickerModule,p.MatNativeDateModule,n.FormsModule,n.ReactiveFormsModule],exports:[c]}]}],e.LpDateSelectorComponent=c,e.LpDateSelectorModule=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=lp-date-selector.umd.min.js.map