{"version":3,"file":"lp-thinking-time-progress.umd.js","sources":["../../../projects/lp-thinking-time-progress/src/lib/lp-thinking-time-progress/lp-thinking-time-progress.component.ts","../../../projects/lp-thinking-time-progress/src/lib/lp-thinking-time-progress.module.ts","../../../projects/lp-thinking-time-progress/src/public-api.ts","../../../projects/lp-thinking-time-progress/src/lp-thinking-time-progress.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { Subscription, interval } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'lp-thinking-time-progress',\r\n  templateUrl: './lp-thinking-time-progress.component.html',\r\n  styleUrls: ['./lp-thinking-time-progress.component.css']\r\n})\r\nexport class LpThinkingTimeProgressComponent implements OnInit {\r\n\r\n\r\n  @Input() progress: number = 0;\r\n  @Input() show:boolean = false;\r\n  @Input() velocity:number = 5;\r\n  @Input() diameter:number = 60;\r\n  @Output() end = new EventEmitter<boolean>()\r\n  timeSubscription:Subscription;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes:SimpleChanges){\r\n    if(changes.show && this.show){\r\n        this.timeSubscription = interval(this.velocity * 30).subscribe(() => {\r\n          if (this.progress <= 100) {\r\n            this.progress++\r\n          } else {\r\n            this.timeSubscription.unsubscribe();\r\n            this.progress = 0;\r\n            this.end.emit(true);\r\n          }\r\n        })\r\n      }else{\r\n        this.timeSubscription ? this.timeSubscription.unsubscribe(): null;\r\n        this.progress = 0;\r\n      }\r\n  }\r\n  stopProgress() {\r\n    this.timeSubscription.unsubscribe();\r\n    this.progress = 0;\r\n    this.end.emit(false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.timeSubscription? this.timeSubscription.unsubscribe(): null;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { LpThinkingTimeProgressComponent } from './lp-thinking-time-progress/lp-thinking-time-progress.component';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    LpThinkingTimeProgressComponent\n  ],\n  imports: [\n   CommonModule,\n   MatIconModule,\n   MatProgressSpinnerModule\n  ],\n  exports: [\n    LpThinkingTimeProgressComponent\n  ]\n})\nexport class LpThinkingTimeProgressModule { }\n","/*\n * Public API Surface of lp-thinking-time-progress\n */\n\n\nexport * from './lib/lp-thinking-time-progress.module';\nexport * from './lib/lp-thinking-time-progress/lp-thinking-time-progress.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","interval","Component","Input","Output","NgModule","CommonModule","MatIconModule","MatProgressSpinnerModule"],"mappings":";;;;;;;QAkBE;YAPS,aAAQ,GAAW,CAAC,CAAC;YACrB,SAAI,GAAW,KAAK,CAAC;YACrB,aAAQ,GAAU,CAAC,CAAC;YACpB,aAAQ,GAAU,EAAE,CAAC;YACpB,QAAG,GAAG,IAAIA,iBAAY,EAAW,CAAA;SAG1B;QAEjB,kDAAQ,GAAR;SACC;QAED,qDAAW,GAAX,UAAY,OAAqB;YAAjC,iBAeC;YAdC,IAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAC;gBACzB,IAAI,CAAC,gBAAgB,GAAGC,aAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;wBACxB,KAAI,CAAC,QAAQ,EAAE,CAAA;qBAChB;yBAAM;wBACL,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;wBACpC,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAClB,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACrB;iBACF,CAAC,CAAA;aACH;iBAAI;gBACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAE,IAAI,CAAC;gBAClE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;aACnB;SACJ;QACD,sDAAY,GAAZ;YACE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtB;QAED,qDAAW,GAAX;YACE,IAAI,CAAC,gBAAgB,GAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAE,IAAI,CAAC;SAClE;;;;gBA5CFC,cAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,wYAAyD;;iBAE1D;;;;2BAIEC,UAAK;uBACLA,UAAK;2BACLA,UAAK;2BACLA,UAAK;sBACLC,WAAM;;;;QCIT;;;;;gBAbCC,aAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,+BAA+B;qBAChC;oBACD,OAAO,EAAE;wBACRC,mBAAY;wBACZC,kBAAa;wBACbC,wCAAwB;qBACxB;oBACD,OAAO,EAAE;wBACP,+BAA+B;qBAChC;iBACF;;;IClBD;;;;ICAA;;;;;;;;;;;;;;;"}