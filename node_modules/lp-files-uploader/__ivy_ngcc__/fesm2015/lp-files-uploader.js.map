{"version":3,"file":"lp-files-uploader.js","sources":["../../../projects/lp-files-uploader/src/lib/lp-files-uploader.component.ts","../../../projects/lp-files-uploader/src/lib/lp-files-uploader.directive.ts","../../../projects/lp-files-uploader/src/lib/lp-files-uploader.module.ts","../../../projects/lp-files-uploader/src/public-api.ts","../../../projects/lp-files-uploader/src/lp-files-uploader.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, forwardRef, ElementRef,ViewChild, Input,  AfterViewInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NgModel, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { skip } from 'rxjs/operators';\n\n@Component({\n  selector: 'lp-files-uploader',\n  templateUrl: './lp-files-uploader.component.html',\n  styles:[],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => LpFilesUploaderComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => LpFilesUploaderComponent),\n      multi: true,\n    }\n  ]\n})\nexport class LpFilesUploaderComponent implements  ControlValueAccessor, AfterViewInit, Validator{\n  @Input() trigger:ElementRef\n  @ViewChild('fileInput',{static:true}) fileInput:ElementRef;\n  @ViewChild('fileInputCtrl',{static:true}) fileInputController:NgModel;\n   /* VALIDATION CRITERIA */\n  @Input() config: { [key: string]: any } = {}\n  errors: { [key: string]: any }\n  validate(){\n    return this.errors\n  }\n  ngAfterViewInit(){\n\n  if (this.trigger) {\n    this.trigger.nativeElement.addEventListener('click', () => {\n      this.fileInput.nativeElement.click();\n    })\n } else {\n   throw new Error('Component needs a trigger')\n }\n    this.fileInputController.valueChanges.pipe(skip(1)).subscribe(() => {\n       let errors = this.fileInputController.control.errors;\n        if(errors){\n          this.errors = errors;\n          this.propagateChange(null);\n        }else{\n          this.errors = null;\n          this.propagateChange(this.fileInput.nativeElement.files);\n        }\n        this.fileInput.nativeElement.files = null;\n        this.fileInput.nativeElement.value = null;\n    })\n  }\n\n  private propagateChange = (_: any) => {};\n  public writeValue(obj: any) {}\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  public registerOnTouched() { }\n\n}\n\n\n\n \n\n  \n\n\n","import { Directive, Input,  forwardRef, ElementRef } from '@angular/core';\nimport { Validator, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[lpFilesUploader]',\n  providers:[\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => LpFilesUploaderDirective),\n      multi: true,\n    }\n  ]\n})\nexport class LpFilesUploaderDirective implements  Validator  {\n\n  @Input() allowedMimeTypes: string[];\n  @Input() notAllowedMimeTypes: string[];\n  @Input() maxSizeKb: number ;\n  @Input() maxNameLength: number;\n\n  constructor(private el:ElementRef) { }\n\n  validate() {\n    let files:FileList = this.el.nativeElement.files; \n     let error = this.validateTypes(files) ? this.validateTypes(files):this.validateSize(files) ? this.validateSize(files) : this.validateNameLength(files) ? this.validateNameLength(files) : null;\n     return error;\n  }\n\n\n  validateTypes(files:FileList):any{\n    let error= null;\n     Array.from(files).forEach((file:File)=>{\n          if(this.allowedMimeTypes ){\n            if (this.allowedMimeTypes.indexOf(file.type) < 0) {\n              error = { invalidMimeType: true };\n            }  \n          }\n      });\n\n      if(this.notAllowedMimeTypes){\n        Array.from(files).forEach((file: File) => {\n          if (this.notAllowedMimeTypes.indexOf(file.type) >= 0) {\n            error = { invalidMimeType: true };\n          }\n        });\n      }\n     return error;\n  }\n\n\n  validateSize(files:FileList):any{\n    let error= null;\n    if(this.maxSizeKb){\n      Array.from(files).forEach((file: File) => {\n        let sizeInKb = file.size / 1024;\n        if (sizeInKb > this.maxSizeKb) {\n          error = { invalidFileSize: true };\n        }\n      });\n    }\n    return error;     \n  }\n\n  validateNameLength(files: FileList):any{\n      let error = null;\n      if(this.maxNameLength){\n        Array.from(files).forEach((file: File) => {\n          if (file.name.length > this.maxNameLength) {\n            error = { invalidNameLength: true };\n          }\n        });\n      }\n      return error;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LpFilesUploaderComponent } from './lp-files-uploader.component';\nimport { LpFilesUploaderDirective } from './lp-files-uploader.directive';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LpFilesUploaderDirective,\n    LpFilesUploaderComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    LpFilesUploaderDirective,\n    LpFilesUploaderComponent\n  ]\n})\nexport class LpFilesUploaderModule { }\n","/*\n * Public API Surface of lp-files-uploader\n */\n\nexport * from './lib/lp-files-uploader.component';\nexport * from './lib/lp-files-uploader.directive';\nexport* from './lib/lp-files-uploader.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}